{"version":3,"sources":["components/viewTimer.js","containers/countdown.js","App.js","index.js"],"names":["ViewTimer","props","start","reset","minutes","seconds","timerOn","timerTime","stopTimer","timerStart","startTimer","resetTimer","adjustTimer","startFaster","startFastest","className","onClick","classnames","blink_alert","disabled","Countdown","state","clearInterval","timer","setState","setInterval","newTime","input","this","Math","floor","slice","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.550cc24d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nimport '../App.css';\r\n\r\nconst ViewTimer = (props) => {\r\n  const {\r\n    start,\r\n    reset,\r\n    minutes,\r\n    seconds,\r\n    timerOn,\r\n    timerTime,\r\n    stopTimer,\r\n    timerStart,\r\n    startTimer,\r\n    resetTimer,\r\n    adjustTimer,\r\n    startFaster,\r\n    startFastest\r\n  } = props;\r\n  return (\r\n    <div className=\"Countdown\">\r\n      <div className=\"Countdown-header\">Countdown</div>\r\n      <div className=\"Countdown-display\">\r\n        <button\r\n          className=\"increase_button\"\r\n          onClick={() => adjustTimer('incMinutes')}\r\n        >\r\n          &#8679;\r\n        </button>\r\n        <button\r\n          className=\"increase_button\"\r\n          onClick={() => adjustTimer('incSeconds')}\r\n        >\r\n          &#8679;\r\n        </button>\r\n\r\n        <div\r\n          className={classnames({\r\n            'Countdown-time': true,\r\n            'Countdown-alert': timerTime < 20000,\r\n            blink_alert: timerTime < 10000 && timerTime > 0\r\n          })}\r\n        >\r\n          {minutes} : {seconds}\r\n        </div>\r\n\r\n        <button\r\n          className=\"decrease_button\"\r\n          onClick={() => adjustTimer('decMinutes')}\r\n        >\r\n          &#8681;\r\n        </button>\r\n        <button\r\n          className=\"decrease_button\"\r\n          onClick={() => adjustTimer('decSeconds')}\r\n        >\r\n          &#8681;\r\n        </button>\r\n      </div>\r\n\r\n      <button\r\n        disabled={timerTime === 0}\r\n        className=\"Button-start\"\r\n        onClick={startTimer}\r\n      >\r\n        Start\r\n      </button>\r\n\r\n      <button\r\n        disabled={timerTime === 0 || start === false}\r\n        className=\"Button-start\"\r\n        onClick={startFaster}\r\n      >\r\n        x 1.5\r\n      </button>\r\n\r\n      <button\r\n        disabled={timerTime === 0 || start === false}\r\n        className=\"Button-start\"\r\n        onClick={startFastest}\r\n      >\r\n        x 2.0\r\n      </button>\r\n\r\n      {timerOn === true && timerTime >= 1000 && (\r\n        <button className=\"Button-stop\" onClick={stopTimer}>\r\n          Pause\r\n        </button>\r\n      )}\r\n      {timerOn === false &&\r\n        timerStart !== 0 &&\r\n        timerStart !== timerTime &&\r\n        timerTime !== 0 && (\r\n          <button className=\"Button-start\" onClick={startTimer}>\r\n            Resume\r\n          </button>\r\n        )}\r\n\r\n      {(timerOn === false || timerTime < 1000) &&\r\n        timerStart !== timerTime &&\r\n        timerStart > 0 && (\r\n          <button className=\"Button-reset\" onClick={resetTimer}>\r\n            Reset\r\n          </button>\r\n        )}\r\n\r\n      {timerTime <= timerStart / 2 && timerStart > 0 ? (\r\n        <p className=\"Countdown-time-half\">More than halfway there!</p>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {timerStart === 0 && timerTime === 0 && reset === false ? (\r\n        <p className=\"Countdown-time-up\">Timeâ€™s up!</p>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nViewTimer.propTypes = {\r\n  start: PropTypes.bool,\r\n  reset: PropTypes.bool,\r\n  timerOn: PropTypes.bool,\r\n  minutes: PropTypes.string.isRequired,\r\n  seconds: PropTypes.string.isRequired,\r\n  stopTimer: PropTypes.func.isRequired,\r\n  startTimer: PropTypes.func.isRequired,\r\n  resetTimer: PropTypes.func.isRequired,\r\n  adjustTimer: PropTypes.func.isRequired,\r\n  timerTime: PropTypes.number.isRequired,\r\n  startFaster: PropTypes.func.isRequired,\r\n  startFastest: PropTypes.func.isRequired,\r\n  timerStart: PropTypes.number.isRequired\r\n};\r\n\r\nexport default ViewTimer;\r\n","import React, { Component } from 'react';\r\n\r\nimport '../App.css';\r\nimport ViewTimer from '../components/viewTimer';\r\n\r\nclass Countdown extends Component {\r\n  state = {\r\n    timerOn: false,\r\n    timerStart: 0,\r\n    timerTime: 0,\r\n    reset: true,\r\n    start: false\r\n  };\r\n\r\n  startTimer = () => {\r\n    clearInterval(this.timer);\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: this.state.timerTime,\r\n      reset: false,\r\n      start: true\r\n    });\r\n\r\n    this.timer = setInterval(() => {\r\n      const newTime = this.state.timerTime - 10;\r\n      if (newTime >= 0) {\r\n        this.setState({\r\n          timerTime: newTime\r\n        });\r\n      } else {\r\n        clearInterval(this.timer);\r\n        this.setState({\r\n          timerOn: false,\r\n          timerStart: 0\r\n        });\r\n      }\r\n    }, 10);\r\n  };\r\n\r\n  startFaster = () => {\r\n    clearInterval(this.timer);\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: this.state.timerTime,\r\n      reset: false\r\n    });\r\n    this.timer = setInterval(() => {\r\n      const newTime = this.state.timerTime - 15;\r\n      if (newTime >= 0) {\r\n        this.setState({\r\n          timerTime: newTime\r\n        });\r\n      } else {\r\n        clearInterval(this.timer);\r\n        this.setState({\r\n          timerOn: false,\r\n          timerStart: 0\r\n        });\r\n      }\r\n    }, 10);\r\n  };\r\n\r\n  startFastest = () => {\r\n    clearInterval(this.timer);\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: this.state.timerTime,\r\n      reset: false\r\n    });\r\n    this.timer = setInterval(() => {\r\n      const newTime = this.state.timerTime - 20;\r\n      if (newTime >= 0) {\r\n        this.setState({\r\n          timerTime: newTime\r\n        });\r\n      } else {\r\n        clearInterval(this.timer);\r\n        this.setState({\r\n          timerOn: false,\r\n          timerStart: 0\r\n        });\r\n      }\r\n    }, 10);\r\n  };\r\n\r\n  stopTimer = () => {\r\n    clearInterval(this.timer);\r\n    this.setState({ timerOn: false });\r\n  };\r\n\r\n  resetTimer = () => {\r\n    this.setState({\r\n      timerStart: 0,\r\n      timerTime: 0,\r\n      reset: true,\r\n      start: false\r\n    });\r\n  };\r\n\r\n  adjustTimer = (input) => {\r\n    const { timerTime, timerOn } = this.state;\r\n    if (!timerOn) {\r\n      if (input === 'incMinutes' && timerTime + 60000 < 4200000) {\r\n        this.setState({ timerTime: timerTime + 60000 });\r\n      } else if (input === 'decMinutes' && timerTime - 60000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 60000 });\r\n      } else if (input === 'decMinutes' && timerTime === 0) {\r\n        this.setState({ timerTime: 3540000 });\r\n      } else if (input === 'incSeconds' && timerTime + 1000 < 4200000) {\r\n        this.setState({ timerTime: timerTime + 1000 });\r\n      } else if (input === 'decSeconds' && timerTime - 1000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 1000 });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { timerTime, timerStart, timerOn, reset, start } = this.state;\r\n    let seconds = ('0' + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\r\n    let minutes = ('0' + Math.floor((timerTime / 60000) % 60)).slice(-2);\r\n\r\n    return (\r\n      <div>\r\n        <ViewTimer\r\n          start={start}\r\n          reset={reset}\r\n          minutes={minutes}\r\n          seconds={seconds}\r\n          timerOn={timerOn}\r\n          timerTime={timerTime}\r\n          timerStart={timerStart}\r\n          stopTimer={this.stopTimer}\r\n          startTimer={this.startTimer}\r\n          resetTimer={this.resetTimer}\r\n          startFaster={this.startFaster}\r\n          adjustTimer={this.adjustTimer}\r\n          startFastest={this.startFastest}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countdown;\r\n","import React from 'react';\nimport Countdown from './containers/countdown';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Countdown />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}